apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
  namespace: home-cert-approver
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: runtime/default
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
spec:
  allowPrivilegeEscalation: false
  forbiddenSysctls:
    - '*'
  fsGroup:
    ranges:
      - max: 65534
        min: 65534
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
    - ALL
  runAsUser:
    ranges:
      - max: 65534
        min: 65534
    rule: MustRunAs
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
      - max: 65534
        min: 65534
    rule: MustRunAs
  volumes:
    - downwardAPI
    - secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: certificates:home-cert-approver
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/approval
    verbs:
      - update
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kubelet-serving
    resources:
      - signers
    verbs:
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: events:home-cert-approver
rules:
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: psp:home-cert-approver
rules:
  - apiGroups:
      - policy
    resourceNames:
      - home-cert-approver
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: events:home-cert-approver
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: events:home-cert-approver
subjects:
  - kind: ServiceAccount
    name: home-cert-approver
    namespace: home-cert-approver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: psp:home-cert-approver
  namespace: home-cert-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:home-cert-approver
subjects:
  - kind: ServiceAccount
    name: home-cert-approver
    namespace: home-cert-approver
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: certificates:home-cert-approver
subjects:
  - kind: ServiceAccount
    name: home-cert-approver
    namespace: home-cert-approver
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
  namespace: home-cert-approver
spec:
  ports:
    - name: metrics
      port: 9090
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: home-cert-approver
    app.kubernetes.io/name: home-cert-approver
  name: home-cert-approver
  namespace: home-cert-approver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: home-cert-approver
      app.kubernetes.io/name: home-cert-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: home-cert-approver
        app.kubernetes.io/name: home-cert-approver
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
                  - key: node-role.kubernetes.io/control-plane
                    operator: DoesNotExist
              weight: 100
      containers:
        - args:
            - serve
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: ghcr.io/alex1989hu/kubelet-serving-cert-approver:main
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 6
          name: cert-approver
          ports:
            - containerPort: 8080
              name: health
            - containerPort: 9090
              name: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 3
          resources:
            limits:
              cpu: 250m
              memory: 32Mi
            requests:
              cpu: 10m
              memory: 16Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      serviceAccountName: home-cert-approver
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
